package handlers

import (
	markup "mikhailche/botcomod/lib/bot-markup"
	"mikhailche/botcomod/services"
	"mikhailche/botcomod/tracer"

	tele "gopkg.in/telebot.v3"
)

func StaticDataController(mux botMux, groupChats *services.GroupChatService) {
	helpHandler := func(ctx tele.Context) error {
		defer tracer.Trace("helpHandler")()
		return ctx.EditOrSend(
			"–ü—Ä–∏–≤–µ—Ç. –Ø –ø–æ–º–æ–≥—É —Å–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ò–∑—É–º—Ä—É–¥–Ω–æ–º –ë–æ—Ä—É.\n–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥–æ–π /help",
			markup.DynamicHelpMenuMarkup(ctx, groupChats),
		)
	}
	mux.Handle("/help", helpHandler)
	mux.Handle(&markup.HelpMainMenuBtn, helpHandler)

	mux.Handle("/status", func(ctx tele.Context) error {
		defer tracer.Trace("/status")()
		// return ctx.EditOrSend("üü° –ü—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ª–∏–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ú–¢–°")
		return ctx.EditOrSend("üü¢ –ü–æ–∫–∞ –Ω–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º")
	})
}
